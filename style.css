:root {
    color-scheme: light dark;

    --page-background: light-dark(#f7f7f7, #111);

    --button-background: light-dark(#eee, #1c1c1c);
    --button-background-hover: light-dark(#e4e4e4, #232323);
    --button-border: light-dark(#f9f9f9, #222222);
    --button-color: light-dark(#000, #fff);

    --button-checked-background: light-dark(#ccc, #191919);

    --cell-border: light-dark(#ddd, #333);
    --cell-full-border: light-dark(#999, #666);
    --cell-checked-background: light-dark(#eee, #333);

    --cell-in-word-background: light-dark(hsl(34, 75%, 70%), hsl(34, 75%, 30%));

    --cell-correct-background: light-dark(hsl(120, 75%, 65%), hsl(120, 75%, 20%));

    --toast-background: light-dark(#fff, #181818);
    --toast-shadow-color: light-dark(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, .3));

    --dialog-background: light-dark(#fff, #111);
    --dialog-backdrop: light-dark(#0002, #fff2);

    --dialog-color-dim: light-dark(#999, #888);
    --dialog-color-em: light-dark(#000, #fff);
    --dialog-color-text: light-dark(#333, #ddd);

    --dialog-primary-button-background: light-dark(#000, #fff);
    --dialog-primary-button-color: light-dark(#fff, #000);
    --dialog-secondary-button-color: light-dark(#000, #fff);
}

*,
*::before,
*::after {
    box-sizing: border-box;
    font-family: 'Onest', system-ui, sans-serif;
}

body,
html {
    height: 100%;
    width: 100%;
    margin: 0;
    background: var(--page-background);
}

body {
    display: grid;
    grid-template-rows: 1fr max-content;
    justify-content: center;

    @media (width < 432px) {
        grid-template-columns: 1fr;
    }
}

dialog {
    inset: 0;
    border: none;
    outline: none;
    border-radius: 1rem;
    padding: 2rem;
    background: var(--dialog-background);
    opacity: 0;
    transition: transform 500ms cubic-bezier(0.19, 1, 0.22, 1), opacity 200ms ease, display 200ms allow-discrete;

    &[open] {
        opacity: 1;
        transform: translateY(0);

        @starting-style {
            opacity: 0;
            transform: translateY(-50%);
        }
    }

    h2,
    p {
        margin: 0;
    }

    h2 {
        font-weight: 600;
        color: var(--dialog-color-em);
    }

    p {
        color: var(--dialog-color-text);
    }

    header {
        display: flex;
        gap: 2rem;
        justify-content: space-between;
        margin-bottom: .5em;

        button {
            border: none;
            cursor: pointer;
            display: grid;
            place-items: center;
            border-radius: 50%;
            height: 24px;
            width: 24px;
            padding: 0;
            background: transparent;
            color: var(--dialog-color-dim);

            @media (pointer: fine) {
                color: var(--dialog-color-dim);

                &:hover,
                &:focus-visible {
                    color: var(--dialog-color-em);
                }

                &:active {
                    color: var(--dialog-color-dim);
                }
            }

            svg {
                & [fill] {
                    fill: currentColor
                }

                & [stroke] {
                    stroke: currentColor
                }
            }
        }
    }

    form {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: .5rem;
        margin-top: 1em;

        button {
            padding: .5em 1.2em;
            font-size: 1rem;
            border: none;
            background: transparent;
            cursor: pointer;
            border-radius: .5em;
            font-weight: 600;

            color: var(--dialog-secondary-button-color);

            &:nth-child(1) {
                background: var(--dialog-primary-button-background);
                color: var(--dialog-primary-button-color);
            }
        }
    }

    &::backdrop {
        background-color: var(--dialog-backdrop);
    }
}

.keyboard {
    --_key-gap: .25rem;

    padding: .5rem;
    display: flex;
    flex-direction: column;
    gap: var(--_key-gap);
    align-items: center;
    margin-inline: auto;
    width: fit-content;

    .key-row {
        width: 100%;
        text-align: center;
        display: flex;
        justify-content: center;
        gap: var(--_key-gap);

        button {
            border: none;
            width: 38px;
            height: 60px;
            border-radius: .5em;
            cursor: pointer;
            background: var(--button-background);
            font-weight: 500;
            font-size: 1.12rem;
            color: var(--button-color);
            padding: 0;
            display: grid;
            place-items: center;
            text-transform: uppercase;

            &.checked:not(.in-word, .correct) {
                background: var(--button-checked-background);
                opacity: .5;
            }

            &.in-word {
                background: var(--cell-in-word-background);
            }

            &.correct {
                background: var(--cell-correct-background);
            }

            &#enter,
            &#backspace {
                flex-grow: 1;
                width: auto;

                & svg {
                    [fill] {
                        fill: currentColor
                    }

                    [stroke] {
                        stroke: currentColor
                    }
                }
            }

            @media (pointer: fine) {
                &:not(.checked, .in-word, .correct):hover {
                    background: var(--button-background-hover);
                }
            }
        }
    }

    @media (width < 432px) {
        width: 100%;

        .key-row {
            display: grid;
            grid-template-columns: repeat(10, 1fr);

            &:nth-child(2) {
                padding-inline: 5%;
                grid-template-columns: repeat(9, 1fr);
            }

            &:nth-child(3) {
                grid-template-columns: 1.5fr repeat(7, 1fr) 1.5fr;
            }

            button {
                width: 100% !important;
            }
        }
    }
}

#board {
    --_gap: .5rem;

    padding-block: var(--_gap);
    width: calc(100% - 2rem);
    max-height: 100%;
    aspect-ratio: 5 / 6;
    display: grid;
    grid-template-rows: repeat(6, 1fr);
    margin: auto;
    gap: var(--_gap);

    .row {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        width: 100%;
        gap: var(--_gap);

        .cell {
            border: 2px solid var(--cell-border);
            aspect-ratio: 1;
            border-radius: .5rem;
            font-size: clamp(1.5rem, 5vw, 2rem);
            display: grid;
            place-items: center;
            text-transform: uppercase;
            line-height: 1;
            font-weight: 600;
            transition: border-color 200ms ease;
            pointer-events: none;
            user-select: none;

            &:is(.in-word, .checked, .correct):nth-child(2) {
                animation-delay: 100ms;
            }

            &:is(.in-word, .checked, .correct):nth-child(3) {
                animation-delay: 200ms;
            }

            &:is(.in-word, .checked, .correct):nth-child(4) {
                animation-delay: 300ms;
            }

            &:is(.in-word, .checked, .correct):nth-child(5) {
                animation-delay: 400ms;
            }

            &:empty {
                animation: removeValue 250ms ease;
            }

            &:not(:empty) {
                animation: addValue 250ms ease;
                border-color: var(--cell-full-border);
            }

            &.checked {
                animation: showChecked 500ms ease forwards;
            }

            &.in-word {
                animation: showInWord 500ms ease forwards;
            }

            &.correct {
                animation: showCorrect 500ms ease forwards;
            }
        }

        &.win .cell {
            animation: bounce 350ms ease forwards;
            background: var(--cell-correct-background);
            border-color: var(--cell-correct-background);
        }

        &:has(~ .win),
        .win~& {
            transition: filter 200ms ease, opacity 200ms ease;
            filter: saturate(50%);
            opacity: .6;
        }
    }
}

@keyframes bounce {
    from {
        transform: translateY(0);
    }

    35% {
        transform: translateY(-1rem);
    }

    75% {
        transform: translateY(3px);
    }

    to {
        transform: translateY(0);
    }
}

#toast-container {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 1;

    .toast {
        --_top: -100px;

        position: absolute;
        width: fit-content;
        width: -moz-fit-content;
        right: 16px;
        margin-inline: auto;
        background: var(--toast-background);
        padding: 1rem 1.5rem;
        border-radius: .5rem;
        font-weight: 600;
        top: var(--_top);
        transition: top 200ms ease, opacity 200ms ease, transform 200ms ease;
        transform-origin: center right;
        box-shadow: 0px 2px 15px var(--toast-shadow-color);

        &.hide {
            opacity: 0;
            transform: scale(.6);
        }

        @media (width < 700px) {
            right: unset;
            inset-inline: 0;
            transform-origin: center;
        }
    }
}

@keyframes addValue {
    0% {
        transform: scale(1)
    }

    50% {
        transform: scale(1.1);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes removeValue {
    0% {
        transform: scale(1)
    }

    50% {
        transform: scale(.9);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes showInWord {
    0% {
        transform: rotateX(0deg);
    }

    49.9% {
        background: transparent;
        border-color: var(--cell-full-border);
        transform: rotateX(90deg);
    }

    50% {
        background: var(--cell-in-word-background);
        border-color: var(--cell-in-word-background);
    }

    55% {
        transform: rotateX(90deg);
    }

    100% {
        transform: rotateX(0deg);
        background: var(--cell-in-word-background);
        border-color: var(--cell-in-word-background);
    }
}

@keyframes showCorrect {
    0% {
        transform: rotateX(0deg);
    }

    49.9% {
        background: transparent;
        border-color: var(--cell-full-border);
        transform: rotateX(90deg);
    }

    50% {
        background: var(--cell-correct-background);
        border-color: var(--cell-correct-background);
    }

    55% {
        transform: rotateX(90deg);
    }

    100% {
        transform: rotateX(0deg);
        background: var(--cell-correct-background);
        border-color: var(--cell-correct-background);
    }
}

@keyframes showChecked {
    0% {
        transform: rotateX(0deg);
    }

    49.9% {
        background: transparent;
        border-color: var(--cell-full-border);
        transform: rotateX(90deg);
    }

    50% {
        background: var(--cell-checked-background);
        border-color: var(--cell-checked-background);
    }

    55% {
        transform: rotateX(90deg);
    }

    100% {
        transform: rotateX(0deg);
        background: var(--cell-checked-background);
        border-color: var(--cell-checked-background);
    }
}